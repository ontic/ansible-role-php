# Copyright (c) Ontic. (http://www.ontic.com.au). All rights reserved.
# See the COPYING file bundled with this package for license details.

---

- name: 'PHP | Debian | Install HTTPS transport.'
  become: yes
  apt:
    name: 'apt-transport-https'
    state: 'present'
  when: 'ansible_os_family == "Debian"'

- name: 'PHP | Ubuntu | Add launchpad PPA.'
  become: yes
  apt_repository:
    repo: '{{ php_ppa }}'
    update_cache: yes
  when: 'ansible_distribution == "Ubuntu" and php_ppa | default(None) != None'

- name: 'PHP | Debian | Update repository key.'
  become: yes
  apt_key:
    url: 'https://packages.sury.org/php/apt.gpg'
    state: 'present'
  when: 'ansible_distribution == "Debian"'

- name: 'PHP | Debian | Update repository list.'
  become: yes
  apt_repository:
    repo: 'deb https://packages.sury.org/php/ {{ ansible_distribution_release | lower }} main'
    filename: 'php'
    update_cache: yes
  when: 'ansible_distribution == "Debian"'

- name: 'PHP | RedHat | Install repositories.'
  become: yes
  yum:
    name: '{{ item.url }}'
    state: '{{ item.state | default(omit) }}'
  with_items: '{{ php_repos }}'
  when: 'ansible_os_family == "RedHat" and php_repos and item.url is defined'

- name: 'PHP | RedHat | Import GPG keys.'
  rpm_key:
    key: '{{ item.key }}'
    state: '{{ item.state | default(omit) }}'
  with_items: '{{ php_repos }}'
  when: 'ansible_os_family == "RedHat" and php_repos and item.key is defined'

- name: 'PHP | Debian | Install PHP packages.'
  become: yes
  apt:
    name: '{{ item.name if "php-" in item.name else php_package_pattern | replace("%version%", php_os_version) | replace("%extension%", item.name) }}{{ "" if item.version is not defined else "=" + item.version }}'
    cache_valid_time: '{{ item.cache_valid_time | default(omit) }}'
    deb: '{{ item.deb | default(omit) }}'
    default_release: '{{ item.default_release | default(omit) }}'
    dpkg_options: '{{ item.dpkg_options | default(omit) }}'
    force: '{{ item.force | default(omit) }}'
    install_recommends: '{{ item.install_recommends | default(omit) }}'
    purge: '{{ item.purge | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    update_cache: '{{ item.update_cache | default(omit) }}'
    upgrade: '{{ item.upgrade | default(omit) }}'
  notify:
    - 'restart php-fpm'
    - 'restart web server'
  with_items: '{{ php_packages }}'
  when: 'ansible_os_family == "Debian"'

- name: 'PHP | RedHat | Install PHP packages.'
  become: yes
  yum:
    name: '{{ item.name if "php-" in item.name else php_package_pattern | replace("%version%", php_os_version) | replace("%extension%", item.name) }}{{ "" if item.version is not defined else "-" + item.version }}'
    conf_file: '{{ item.conf_file | default(omit) }}'
    disable_gpg_check: '{{ item.disable_gpg_check | default(omit) }}'
    disablerepo: '{{ item.disablerepo | default(omit) }}'
    enablerepo: '{{ item.enablerepo | default(php_enable_repo) }}'
    exclude: '{{ item.exclude | default(omit) }}'
    list: '{{ item.list | default(omit) }}'
    state: '{{ item.state | default(omit) }}'
    update_cache: '{{ item.update_cache | default(omit) }}'
  notify:
    - 'restart php-fpm'
    - 'restart web server'
  with_items: '{{ php_packages }}'
  when: 'ansible_os_family == "RedHat"'

- name: 'PHP | Debian | Install PHP Apache package.'
  become: yes
  apt:
    name: 'libapache2-mod-php{{ php_os_version }}'
    state: 'present'
  notify:
    - 'restart php-fpm'
    - 'restart web server'
  when: 'ansible_os_family == "Debian" and php_web_server_service_name == "apache2"'

- name: 'PHP | Debian | Install PEAR package.'
  become: yes
  apt:
    name: '{{ php_pear_package_name }}'
    state: '{{ php_pecl_extensions | ternary("present", "absent") }}'
  notify:
    - 'restart php-fpm'
    - 'restart web server'
  when: 'ansible_os_family == "Debian"'

- name: 'PHP | RedHat | Install PEAR package.'
  become: yes
  yum:
    name: '{{ php_pear_package_name }}'
    state: '{{ php_pecl_extensions | ternary("present", "absent") }}'
  notify:
    - 'restart php-fpm'
    - 'restart web server'
  when: 'ansible_os_family == "RedHat"'

- name: 'PHP | Install PECL extensions.'
  become: yes
  shell: 'echo yes \"\" | pecl install {{ item.name }}'
  register: 'php_pecl_install'
  changed_when: 'php_pecl_install.stdout.find("already installed") == -1'
  failed_when: 'php_pecl_install.stdout.find("ERROR") != -1'
  with_items: '{{ php_pecl_extensions }}'
  when: 'php_pecl_extensions and item.state | default("present") == "present"'
  notify:
    - 'restart php-fpm'
    - 'restart web server'

- name: 'PHP | Uninstall PECL extensions.'
  become: yes
  shell: 'echo yes \"\" | pecl uninstall {{ item.name }}'
  register: 'php_pecl_uninstall'
  changed_when: 'php_pecl_uninstall.stdout.find("not installed") == -1'
  failed_when: 'php_pecl_uninstall.stdout.find("ERROR") != -1'
  with_items: '{{ php_pecl_extensions }}'
  when: 'php_pecl_extensions and item.state | default("present") == "absent"'
  notify:
    - 'restart php-fpm'
    - 'restart web server'
